services:
  server:
    container_name: server
    build:
        context: .
        dockerfile: Dockerfile.dev
    env_file:
      - .env
    volumes:
      - ./app:/usr/src/app/app
      - ./config:/usr/src/app/config
      - ./database:/usr/src/app/database
      - ./inertia:/usr/src/app/inertia
      - ./node_modules:/usr/src/app/node_modules
      - ./resources:/usr/src/app/resources
      - ./start:/usr/src/app/start
      - ./tests:/usr/src/app/tests
      - ./public:/usr/src/app/public
      - ./uploads:/usr/src/app/uploads
    restart: unless-stopped
    develop:
      watch:
        - path: ./app/
          target: /usr/src/app
          action: sync
          delay: 1000ms
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:16.3-alpine
    user: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_DB: ASKVIBE_DB
    volumes:
      - postgres-data:/var/lib/postgresql/
    networks:
      - app-network
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - POSTGRES_PASSWORD

  proxy:
    container_name: proxy
    image: nginx:1.27-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - app-network

volumes:
    postgres-data:
        driver: local

networks:
    app-network:
        driver: bridge

secrets:
    POSTGRES_PASSWORD:
        file: ./secrets/postgres_password
